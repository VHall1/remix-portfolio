name: üöÄ Deploy
on:
  push:
    branches:
      - main
runs-on:
  group: self-hosted
  strategy:
    matrix:
      os: [ubuntu-latest]

# Cancel previous in-flight deployments
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: üîé Determine deployable changes
    outputs:
      DEPLOYABLE: ${{ steps.changes.outputs.DEPLOYABLE }}
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: üîé Determine deployable changes
        id: changes
        run: >-
          echo ::set-output name=DEPLOYABLE::$(node ./other/is-deployable.js ${{ github.sha }})

      - name: ‚ùì Deployable
        run: >-
          echo "DEPLOYABLE: ${{ steps.changes.outputs.DEPLOYABLE }}"

  lint:
    name: ‚¨£ ESLint
    needs: [changes]
    if: needs.changes.outputs.DEPLOYABLE == 'true'
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: üì• Download deps
        uses: npm ci

      - name: üî¨ Lint
        run: npm run lint

  typecheck:
    name:  ¶ TypeScript
    needs: [changes]
    if: needs.changes.outputs.DEPLOYABLE == 'true'
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: üì• Download deps
        uses: npm ci

      - name: üîé Type check
        run: npm run typecheck

  deploy:
    name: üöÄ Deploy
    needs: [changes, lint, typecheck]
    if: ${{ (github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.changes.outputs.DEPLOYABLE == 'true' }}
    steps:
      - name: üì¢ Discord notification
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          curl -i -H "Accept: application/json" -H "Content-Type:application/json" -X POST --data "{\"content\":\"\",\"tts\":false,\"embeds\":[{\"description\":\"Started a new deploy to [$GITHUB_REPOSITORY](https://github.com/$GITHUB_REPOSITORY)\",\"color\":2326507,\"fields\":[],\"author\":{\"name\":\"$GITHUB_ACTOR\",\"url\":\"https://github.com/$GITHUB_ACTOR\",\"icon_url\":\"https://github.com/$GITHUB_ACTOR.png\"},\"footer\":{\"text\":\"$GITHUB_REPOSITORY\",\"icon_url\":\"https://github.com/github.png\"}}],\"components\":[],\"actions\":{}}" $WEBHOOK_URL

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: üì• Download deps
        uses: npm ci

      - name: üíø Build remix
        run: npm run build

      - name: üßπ Clear pm2 instances
        run: |
          pm2 delete $GITHUB_REPOSITORY || true

      - name: ‚¨Ü Start pm2
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          CONTENT_GITHUB_TOKEN: ${{ secrets.CONTENT_GITHUB_TOKEN }}
          PORT: ${{ secrets.PORT }}
        run: |
          pm2 start pm2.config.cjs

      - name: üì¢ Discord notification
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          curl -i -H "Accept: application/json" -H "Content-Type:application/json" -X POST --data "{\"content\":\"\",\"tts\":false,\"embeds\":[{\"description\":\"Successfully deployed to [$GITHUB_REPOSITORY](https://github.com/$GITHUB_REPOSITORY)\",\"color\":65280,\"fields\":[],\"author\":{\"name\":\"$GITHUB_ACTOR\",\"url\":\"https://github.com/$GITHUB_ACTOR\",\"icon_url\":\"https://github.com/$GITHUB_ACTOR.png\"},\"footer\":{\"text\":\"$GITHUB_REPOSITORY\",\"icon_url\":\"https://github.com/github.png\"}}],\"components\":[],\"actions\":{}}" $WEBHOOK_URL

      - name: üíæ Save pm2 changes
        run: |
          pm2 save
